// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateProductReader is a Reader for the UpdateProduct structure.
type UpdateProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewUpdateProductUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewUpdateProductNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /products/{id}] updateProduct", response, response.Code())
	}
}

// NewUpdateProductNoContent creates a UpdateProductNoContent with default headers values
func NewUpdateProductNoContent() *UpdateProductNoContent {
	return &UpdateProductNoContent{}
}

/*
UpdateProductNoContent describes a response with status code 204, with default header values.

No content is returned by this API endpoint
*/
type UpdateProductNoContent struct {
}

// IsSuccess returns true when this update product no content response has a 2xx status code
func (o *UpdateProductNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update product no content response has a 3xx status code
func (o *UpdateProductNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product no content response has a 4xx status code
func (o *UpdateProductNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update product no content response has a 5xx status code
func (o *UpdateProductNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update product no content response a status code equal to that given
func (o *UpdateProductNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update product no content response
func (o *UpdateProductNoContent) Code() int {
	return 204
}

func (o *UpdateProductNoContent) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNoContent", 204)
}

func (o *UpdateProductNoContent) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNoContent", 204)
}

func (o *UpdateProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProductUnprocessableEntity creates a UpdateProductUnprocessableEntity with default headers values
func NewUpdateProductUnprocessableEntity() *UpdateProductUnprocessableEntity {
	return &UpdateProductUnprocessableEntity{}
}

/*
UpdateProductUnprocessableEntity describes a response with status code 422, with default header values.

Validation errors as an array of strings
*/
type UpdateProductUnprocessableEntity struct {
	Payload *UpdateProductUnprocessableEntityBody
}

// IsSuccess returns true when this update product unprocessable entity response has a 2xx status code
func (o *UpdateProductUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update product unprocessable entity response has a 3xx status code
func (o *UpdateProductUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product unprocessable entity response has a 4xx status code
func (o *UpdateProductUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update product unprocessable entity response has a 5xx status code
func (o *UpdateProductUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update product unprocessable entity response a status code equal to that given
func (o *UpdateProductUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update product unprocessable entity response
func (o *UpdateProductUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateProductUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductUnprocessableEntity %s", 422, payload)
}

func (o *UpdateProductUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductUnprocessableEntity %s", 422, payload)
}

func (o *UpdateProductUnprocessableEntity) GetPayload() *UpdateProductUnprocessableEntityBody {
	return o.Payload
}

func (o *UpdateProductUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateProductUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProductNotImplemented creates a UpdateProductNotImplemented with default headers values
func NewUpdateProductNotImplemented() *UpdateProductNotImplemented {
	return &UpdateProductNotImplemented{}
}

/*
UpdateProductNotImplemented describes a response with status code 501, with default header values.

Generic error message as a string
*/
type UpdateProductNotImplemented struct {
	Payload *UpdateProductNotImplementedBody
}

// IsSuccess returns true when this update product not implemented response has a 2xx status code
func (o *UpdateProductNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update product not implemented response has a 3xx status code
func (o *UpdateProductNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product not implemented response has a 4xx status code
func (o *UpdateProductNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this update product not implemented response has a 5xx status code
func (o *UpdateProductNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this update product not implemented response a status code equal to that given
func (o *UpdateProductNotImplemented) IsCode(code int) bool {
	return code == 501
}

// Code gets the status code for the update product not implemented response
func (o *UpdateProductNotImplemented) Code() int {
	return 501
}

func (o *UpdateProductNotImplemented) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNotImplemented %s", 501, payload)
}

func (o *UpdateProductNotImplemented) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNotImplemented %s", 501, payload)
}

func (o *UpdateProductNotImplemented) GetPayload() *UpdateProductNotImplementedBody {
	return o.Payload
}

func (o *UpdateProductNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateProductNotImplementedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateProductNotImplementedBody update product not implemented body
swagger:model UpdateProductNotImplementedBody
*/
type UpdateProductNotImplementedBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update product not implemented body
func (o *UpdateProductNotImplementedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update product not implemented body based on context it is used
func (o *UpdateProductNotImplementedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateProductNotImplementedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateProductNotImplementedBody) UnmarshalBinary(b []byte) error {
	var res UpdateProductNotImplementedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UpdateProductUnprocessableEntityBody update product unprocessable entity body
swagger:model UpdateProductUnprocessableEntityBody
*/
type UpdateProductUnprocessableEntityBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update product unprocessable entity body
func (o *UpdateProductUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update product unprocessable entity body based on context it is used
func (o *UpdateProductUnprocessableEntityBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateProductUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateProductUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res UpdateProductUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
