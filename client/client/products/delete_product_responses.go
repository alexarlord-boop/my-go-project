// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 501:
		result := NewDeleteProductNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /products/{id}] deleteProduct", response, response.Code())
	}
}

// NewDeleteProductNoContent creates a DeleteProductNoContent with default headers values
func NewDeleteProductNoContent() *DeleteProductNoContent {
	return &DeleteProductNoContent{}
}

/*
DeleteProductNoContent describes a response with status code 204, with default header values.

No content is returned by this API endpoint
*/
type DeleteProductNoContent struct {
}

// IsSuccess returns true when this delete product no content response has a 2xx status code
func (o *DeleteProductNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete product no content response has a 3xx status code
func (o *DeleteProductNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product no content response has a 4xx status code
func (o *DeleteProductNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product no content response has a 5xx status code
func (o *DeleteProductNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product no content response a status code equal to that given
func (o *DeleteProductNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete product no content response
func (o *DeleteProductNoContent) Code() int {
	return 204
}

func (o *DeleteProductNoContent) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent", 204)
}

func (o *DeleteProductNoContent) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent", 204)
}

func (o *DeleteProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductNotImplemented creates a DeleteProductNotImplemented with default headers values
func NewDeleteProductNotImplemented() *DeleteProductNotImplemented {
	return &DeleteProductNotImplemented{}
}

/*
DeleteProductNotImplemented describes a response with status code 501, with default header values.

Generic error message as a string
*/
type DeleteProductNotImplemented struct {
	Payload *DeleteProductNotImplementedBody
}

// IsSuccess returns true when this delete product not implemented response has a 2xx status code
func (o *DeleteProductNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product not implemented response has a 3xx status code
func (o *DeleteProductNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product not implemented response has a 4xx status code
func (o *DeleteProductNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product not implemented response has a 5xx status code
func (o *DeleteProductNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this delete product not implemented response a status code equal to that given
func (o *DeleteProductNotImplemented) IsCode(code int) bool {
	return code == 501
}

// Code gets the status code for the delete product not implemented response
func (o *DeleteProductNotImplemented) Code() int {
	return 501
}

func (o *DeleteProductNotImplemented) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotImplemented %s", 501, payload)
}

func (o *DeleteProductNotImplemented) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotImplemented %s", 501, payload)
}

func (o *DeleteProductNotImplemented) GetPayload() *DeleteProductNotImplementedBody {
	return o.Payload
}

func (o *DeleteProductNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteProductNotImplementedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeleteProductNotImplementedBody delete product not implemented body
swagger:model DeleteProductNotImplementedBody
*/
type DeleteProductNotImplementedBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete product not implemented body
func (o *DeleteProductNotImplementedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete product not implemented body based on context it is used
func (o *DeleteProductNotImplementedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteProductNotImplementedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteProductNotImplementedBody) UnmarshalBinary(b []byte) error {
	var res DeleteProductNotImplementedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
